{"version":3,"sources":["Form/Form.style.js","Form/Form.js","App.js","reportWebVitals.js","index.js"],"names":["MainContainer","styled","div","Container","Flex","Hr","hr","Icon","Form","form","Input","input","Button","button","Title","h2","P","schema","yup","email","required","password","matches","confirmPassword","oneOf","SignIn","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","formState","reset","onSubmit","alert","type","placeholder","name","id","className","message","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEaA,EAAgBC,IAAOC,IAAV,sKAUbC,EAAYF,IAAOC,IAAV,gEAKTE,EAAOH,IAAOC,IAAV,6HAQJG,EAAKJ,IAAOK,GAAV,+DAKFC,EAAON,IAAOC,IAAV,iEAKJM,EAAOP,IAAOQ,KAAV,iJASJC,EAAQT,IAAOU,MAAV,+DAKLC,EAASX,IAAOY,OAAV,4GAONC,EAAQb,IAAOc,GAAV,0CAILC,EAAIf,IAAOc,GAAV,oJ,+BC1CRE,EAASC,IAAW,CACxBC,MAAOD,MAAaC,QAAQC,SAAS,qBACrCC,SAAUH,MAEPE,SAAS,wBACTE,QACC,kDACA,iFAEJC,gBAAiBL,MAEdM,MAAM,CAACN,IAAQ,YAAa,MAAO,0BA2EzBO,EAxEA,WACb,MAKIC,YAAQ,CACVC,KAAM,SACNC,SAAUC,YAAYZ,KANtBa,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAWF,OACE,mCACE,cAAClC,EAAD,UACE,eAACG,EAAD,WACE,cAACI,EAAD,UACE,cAAC,IAAD,MAEF,eAACH,EAAD,WACE,cAACC,EAAD,IACA,cAACS,EAAD,wBACA,cAACT,EAAD,OAEF,eAACG,EAAD,CAAM2B,SAAUJ,GAjBP,WACfK,MAAM,MACNF,EAAM,OAeA,UACE,gCACE,cAACxB,EAAD,yBACE2B,KAAK,OACLC,YAAY,QACZC,KAAK,SACDT,EAAS,UAJf,IAKEU,GAAG,QACHC,UAAS,UAAKT,EAAOb,OAAS,aAE/Ba,EAAOb,OAAS,cAACH,EAAD,UAAIgB,EAAOb,MAAMuB,aAEpC,gCACE,cAAChC,EAAD,aACE2B,KAAK,OACLC,YAAY,WACZC,KAAK,WACLpB,MAAM,WACNsB,UAAS,UAAKT,EAAOX,UAAY,WAC7BS,EAAS,cAEdE,EAAOX,UAAY,cAACL,EAAD,UAAIgB,EAAOX,SAASqB,aAE1C,gCACE,cAAChC,EAAD,aACE2B,KAAK,OACLC,YAAY,mBACZC,KAAK,kBACLC,GAAG,kBACHC,UAAS,UAAKT,EAAOT,iBAAmB,WACpCO,EAAS,qBAEdE,EAAOT,iBACN,cAACP,EAAD,UAAIgB,EAAOT,gBAAgBmB,aAG/B,cAAC9B,EAAD,CAAQyB,KAAK,SAAb,+BCtFGM,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6b2c0c6d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.div`\r\n  margin: 0 auto;\r\n  width: 400px;\r\n  background: #9cafd7;\r\n  text-align: center;\r\n  padding: 30px;\r\n  position: relative;\r\n  top: 50px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 350px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  color: white;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const Hr = styled.hr`\r\n  width: 120px;\r\n  height: 0.5px;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  font-size: 70px;\r\n  color: white;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  align-items: center;\r\n  width: 300px;\r\n  margin: auto;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  width: 300px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 150px;\r\n  background: #5d81b5;\r\n  padding: 10px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin: 0;\r\n`;\r\n\r\nexport const P = styled.h2`\r\n  text-align: left;\r\n  margin: 5px;\r\n  font-size: 15px;\r\n  font-weight: 400;\r\n  color: brown;\r\n  font-family: inherit;\r\n`;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  MainContainer,\r\n  Flex,\r\n  Icon,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  Hr,\r\n  Button,\r\n  Title,\r\n  P,\r\n} from \"./Form.style\";\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst schema = yup.object({\r\n  email: yup.string().email().required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/,\r\n      \"Password should contain digit, lowercase, uppercase and at least 6 characters\"\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst SignIn = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    mode: \"onBlue\",\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = () => {\r\n    alert(\"ok\");\r\n    reset({});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainContainer>\r\n        <Container>\r\n          <Icon>\r\n            <FaUserCircle />\r\n          </Icon>\r\n          <Flex>\r\n            <Hr />\r\n            <Title> Sign in </Title>\r\n            <Hr />\r\n          </Flex>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <div>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                {...register(\"email\")}\r\n                id=\"email\"\r\n                className={`${errors.email && \"rd_inp\"}`}\r\n              />\r\n              {errors.email && <P>{errors.email.message}</P>}\r\n            </div>\r\n            <div>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                email=\"password\"\r\n                className={`${errors.password && \"rd_inp\"}`}\r\n                {...register(\"password\")}\r\n              />\r\n              {errors.password && <P>{errors.password.message}</P>}\r\n            </div>\r\n            <div>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Confirm password\"\r\n                name=\"confirmPassword\"\r\n                id=\"confirmPassword\"\r\n                className={`${errors.confirmPassword && \"rd_inp\"}`}\r\n                {...register(\"confirmPassword\")}\r\n              />\r\n              {errors.confirmPassword && (\r\n                <P>{errors.confirmPassword.message}</P>\r\n              )}\r\n            </div>\r\n            <Button type=\"submit\">Submit</Button>\r\n          </Form>\r\n        </Container>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import SignIn from \"./Form/Form\";\n\nfunction App() {\n  return (\n    <>\n      <SignIn />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}